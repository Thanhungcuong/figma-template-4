@import url("https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;
html,
body {
  position: relative;
  height: 100%;
  --accent: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
  --accent-light: var(
    --dd-400,
    linear-gradient(90deg, #50c577 0%, #2dbefc 100%)
  );
  --status-success: rgb(127, 255, 144);
  --status-warning: rgb(255, 150, 127);

  --transition-duration-timing-to: 500ms ease-out;
  --transition-duration-timing-from: 500ms ease-out;
}

body {
  background: #eee;
  font-family: "Lato";
  font-size: 14px;
  color: #000;
  margin: 0;
  padding: 0;
}

/* .menu-moblie */
.menu-moblie {
  display: flex;
  flex-direction: column;
  background-color: white;
  box-shadow: 0px 0px 10px 0px rgba(53, 222, 127, 0.4);
}

/* .menu-moblie li */
.menu-moblie li {
  padding: 8px 16px; /* Thay thế px-2 py-3 */
  border-bottom: 2px solid #ccc; /* Thay thế border-b-2 */
  background: white;
}

/* .menu-moblie li:first-child */
.menu-moblie li:first-child {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: linear-gradient(
    135deg,
    #ffb469 0%,
    #e57709 100%
  ); /* Thay thế first:bg-linear-Yellow-Green */
}

ul.menu-desktop li {
  position: relative;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  text-align: center;
}

ul.menu-desktop li:hover {
  background-image: linear-gradient(135deg, #3eed8b 0%, #0a9949 100%);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

ul.menu-desktop li::before {
  position: absolute;
  bottom: -0.75rem;
  left: 0px;
  display: block;
  height: 0.25rem;
  width: 0;
  background-image: linear-gradient(135deg, #3eed8b 0%, #0a9949 100%);
  transition-property: all;
  transition-duration: 500ms;
  content: var(--tw-content);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

ul.menu-desktop li:hover::before {
  content: var(--tw-content);
  width: 100%;
}

footer {
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

p span {
  font-weight: bold;
}

.my-div {
  border-radius: 400px 0px 400px 10px;
}

.image-container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

h3 span {
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-family: Lato;
  font-size: 36px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
}

.form1 {
  border: 1px solid var(--dd-400, #50c577);
}

.form1 input {
  color: var(--Neutral-Place-Holder, #888);
  text-align: justify;
  font-family: Lato;
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  background: none;
  margin-left: 2rem;
}
input[type="text"]:focus {
  outline: none !important;
  outline-offset: 0;
  box-shadow: none;
  border-color: #2891cc;
}

input[type="tel"]:focus {
  outline: none !important;
  outline-offset: 0;
  box-shadow: none;
  border-color: #2891cc;
}

input[type="email"]:focus {
  outline: none !important;
  outline-offset: 0;
  box-shadow: none;
  border-color: #2891cc;
  border-color: ;
}

textarea:focus {
  outline: none !important;
  outline-offset: 0;
  box-shadow: none !important;
  border-color: #2891cc;
}

input[type="date"]:focus {
  outline: none !important;
  outline-offset: 0;
  box-shadow: none;
  border-color: #2891cc;
}

.form2 label {
  color: var(--dd-mau-logo, #2891cc);
  /* Body/Roboto/Label */
  font-family: Roboto;
  font-size: 12px;
  font-style: normal;
  font-weight: 400;
  line-height: 16px; /* 133.333% */
  letter-spacing: 0.4px;
}

.div-top {
  background-color: rgba(255, 255, 255, 0.7);
  backdrop-filter: blur(5px);
}

.div-be {
  border-radius: 35px 5px;
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

.slide1 {
  width: 100%;
  height: 32rem !important;
}

.slide1 .swiper-slide {
  text-align: center;
  font-size: 18px;
  border-radius: 50px 10px;
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

.slide1 .swiper-slide:nth-child(2n) {
  margin-top: 112px;
}
.Swiper2 .swiper-slide {
  text-align: center;
  background: #fff;
  height: 485px;
  width: 328px;
  line-height: 358px;
  border-radius: 80px 10px 15px 15px;
}

.imghalf {
  width: 310px;
  height: 228px;
  flex-shrink: 0;
  border-radius: 45px 10px 10px 10px;
}

@media only screen and (max-width: 400px) {
  .imgslide {
    width: 219px;
    height: 151px;
  }
}

.buttons:hover {
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

.buttons:hover svg {
  stroke: white;
}

.divbg {
  width: 1397px;
  height: 1660px;
  flex-shrink: 0;
  border-radius: 460px 0px 460px 8px;
  opacity: 0.05;
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

.orangebutton:hover {
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
}

.divs hover {
  background: white;
}

@media only screen and (max-width: 900px) {
  .divs {
    width: 266px;
  }
}
.blabla {
  width: 110px;
  height: 10px;
  transform: rotate(-0.433deg);
  flex-shrink: 0;
}

.xanhnhat {
  border-radius: 80px 10px 80px 0px;
  background: var(--dd-200, linear-gradient(90deg, #9ddcb0 0%, #84d0fd 100%));
}

.divdiv {
  border-radius: 300px 10px;
}

@media (max-width: 640px) {
  .divdiv {
    border-radius: 0; /* Loại bỏ bo góc cho breakpoint nhỏ hơn hoặc bằng sm */
  }
}
.img__full img {
  width: 100%;
  object-fit: cover;
  height: 100%;
}
@media (max-width: 640px) {
  .img__full img {
    height: 5rem; /* Chiều cao mong muốn khi dưới sm */
  }
}

.accordion {
  &:has(.accordion-toggle:focus-visible),
  &:has(.accordion-toggle:focus) {
  }
}

.accordion-toggle {
  padding: 0.5em 1em;
  margin-bottom: 0;

  display: flex;
  justify-content: space-between;
  align-items: center;

  cursor: pointer;

  /* Make its children not clickable so only the <summary> element can be clicked */
  & > * {
    pointer-events: none;
  }

  &:focus-visible,
  &:focus,
  &:hover,
  .accordion:has(.accordion-panel[expanded]) & {
    filter: brightness(140%);
  }
}

.btn-icon {
  position: relative;
  width: 32px;
  height: 32px;

  &::before,
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;

    height: 4px;
    width: calc(100% - 0.75em);

    background: var(--accent);
  }
  &::after {
    rotate: 90deg;
  }
  .accordion:has(.accordion-panel[expanded]) &::before,
  .accordion:has(.accordion-panel[expanded]) &::after {
    rotate: 180deg;
  }

  /* The prefers-reduced-motion feature query detects whether the user has requested the operating system to minimize the amount of animation or motion it uses */
  @media (prefers-reduced-motion: no-preference) {
    &::before,
    &::after {
      /* Transition from '-' to '+' (ONLY IF overriden by an other transition property in the expanded state) */
      transition: rotate var(--transition-duration-timing-from);
    }
    /* Transition from '+' to -' */
    .accordion:has(.accordion-panel[expanded]) &::before,
    .accordion:has(.accordion-panel[expanded]) &::after {
      transition: rotate var(--transition-duration-timing-to);
    }
  }
}

.accordion-panel {
  display: grid;
  grid-template-rows: 0fr;
  /* Make the collapsed accordion-panel    not accessible to screen reader (contrary to 'display: none, the 'visibility' property can be animated */
  visibility: hidden;
  /* Also add opacity transition for better visual effect */
  opacity: 0;

  /* Use a custom attribute (dynamically added/removed with JavaScript) to enable CSS transitions between the accordion states */
  &[expanded] {
    grid-template-rows: 1fr;
    visibility: visible;
    opacity: 1;
  }

  /* The prefers-reduced-motion feature query detects whether the user has requested the operating system to minimize the amount of animation or motion it uses */
  @media (prefers-reduced-motion: no-preference) {
    /* Transition from expanded to collapsed (ONLY IF overriden by an other transition property in the expanded state) */
    transition: grid-template-rows var(--transition-duration-timing-from),
      visibility var(--transition-duration-timing-from),
      opacity var(--transition-duration-timing-from);

    /* Transition from collapsed to expanded */
    &[expanded] {
      transition: grid-template-rows var(--transition-duration-timing-to),
        visibility var(--transition-duration-timing-to),
        opacity var(--transition-duration-timing-to);
    }
  }
}

.accordion-drawer {
  color: var(--primary-dark);
  background-color: var(--accent-light);
  overflow: hidden;
}

/* Additional div to add padding to the content without messing with the animation */
.accordion-content {
  padding: 1em;

  p {
    text-align: left;
  }
}

/* Hiệu ứng khi active */
.SwiperT1 .swiper-slide {
  /* Relative Positioning */
  position: relative;
}

.SwiperT1 .swiper-slide::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0; /* Ban đầu chiều rộng là 0 */
  height: 1px;
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
  transition: width 0.3s ease; /* Thêm transition */
}

.SwiperT1 .swiper-slide-thumb-active {
  background: var(--dd-400, linear-gradient(90deg, #50c577 0%, #2dbefc 100%));
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.SwiperT1 .swiper-slide-thumb-active::before {
  width: 85%;
}

details {
  border-top: 2px solid #ebebeb; /* Màu và chiều rộng của border top */
  border-bottom: 2px solid #ebebeb; /* Màu và chiều rộng của border bottom */
}

.container p,
h3 {
  padding-right: 1rem;
  padding-left: 1rem;
}

.anhbogoc img {
  border-radius: 10px;
  overflow: hidden;
}

.Swiper2 {
  margin-left: 1rem !important;
  margin-right: 1rem !important;
}

@keyframes inputFocus {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.02);
  } /* Optional subtle zoom effect on focus */
}

@keyframes inputBlur {
  from {
    transform: scale(1.02);
  } /* Optional subtle zoom effect on blur */
  to {
    transform: scale(1);
  }
}
